<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	       http://www.springframework.org/schema/beans/spring-beans.xsd
	       http://www.springframework.org/schema/context
	       http://www.springframework.org/schema/context/spring-context.xsd
	       http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd
	       http://www.springframework.org/schema/aop
	       http://www.springframework.org/schema/aop/spring-aop.xsd">
	
		   
     	<!-- 该配置使spring扫描除controller以外的bean -->
     	<context:annotation-config></context:annotation-config>
		<context:component-scan base-package="com.x.train">
        	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
   		</context:component-scan>


		<!--druid实现统计SQL的filter-->
		<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
			<property name="mergeSql" value="true" />
		</bean>

		<!--druid实现防止SQL注入的filter（可在此配置数据库的类型和拦截规则的配置文件的路径）-->
		<bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
			<property name="dbType" value="mysql" />
		</bean>


		<!--druid实现监控spring的aop配置-->
		<bean id="druid-stat-interceptor"
			  class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
		</bean>

		<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
			  scope="prototype">
			<property name="patterns">
				<list>
					<value>com.x.train.serviceImpl.*</value>
				</list>
			</property>
		</bean>

		<bean id="druidAndSpringAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
			<property name="advice" ref="druid-stat-interceptor"/>
			<property name="pointcut" ref="druid-stat-pointcut"/>
		</bean>


	 	<!-- datasource -->
     	<context:property-placeholder location="classpath:db.properties" />
	    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
	    	<!-- results in a setDriverClassName(String) call -->
	    	<property name="driverClassName" value="${jdbc.driverClass}"/>
	    	<property name="url" value="${jdbc.jdbcUrl}"/>
	   	 	<property name="username" value="${jdbc.user}"/>
	    	<property name="password" value="${jdbc.password}"/>
			<!-- 配置连接池的初始值 -->
			<property name="initialSize" value="3" />
			<property name="maxActive" value="100" />
			<property name="maxWait" value="1000" />
			<property name="removeAbandoned" value="true" /> <!-- 打开removeAbandoned功能 -->
			<property name="removeAbandonedTimeout" value="1800" /> <!-- 1800秒，也就是30分钟 -->
			<property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->

			<property name="proxyFilters">
				<list>
					<ref bean="stat-filter" />
					<ref bean="wall-filter"/>
				</list>
			</property>
		</bean>


		<!-- 配置SqlSessionFactory对象 -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource"/>
			<property name="configLocation" value="classpath:mybatis.cfg.xml"/>
		</bean>


		<!-- dao注入 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="com.x.train.dao" />
			<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		</bean>


		<!-- transaction -->
		<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"/>
		</bean>


		<!-- aspect -->
		<tx:advice id="tx-advice" transaction-manager="txManager">
			<tx:attributes>
				<!-- 让所有的方法都加入事务管理，为了提高效率，可以把一些查询之类的方法设置为只读的事务 -->
				<tx:method name="*" propagation="REQUIRED" read-only="true"/>
				<tx:method name="insert*" propagation="REQUIRED"/>
				<tx:method name="delete*" propagation="REQUIRED"/>
				<tx:method name="update*" propagation="REQUIRED"/>
			</tx:attributes>
		</tx:advice>

		<aop:config>
			<aop:pointcut id="businessService"
				expression=" execution(public * com.x.train.serviceImpl.*.*(..))"/>
			<aop:advisor pointcut-ref="businessService" advice-ref="tx-advice"/>
		</aop:config>



</beans>